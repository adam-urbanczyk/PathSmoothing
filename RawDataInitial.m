function rawData = RawDataInitial(type)
% data to fit
% define the data to fit;
% the corresponding curve parameters of the data are obtained by the chord length method firstly;
% the knot vector is obtained sequentially;
% then the control points are obtained by the PIA method;
% see Chapter 9.2 in "The NURBS BOOK" .
% HJ, 20160606.
validateattributes(type, {'numeric'}, {'positive','integer','scalar'});
switch type
    case 1
        %% rectangle data, type 1
        % see "gradient descent method and convergence for geometric interpolation algorithm of B-spline curve"
        rawData = [30, 100, 100, 100, 0, -100, -100, -100, -30;...
            0, 0, 15, 30, 30, 30, 15, 0, 0];
        
    case 2
        %% nurbs 3d curve, type 2
        Nurbs_Initial;
        numData = 50;
        u = linspace(0, 1, numData);
        rawData = nurbs_eval(nurbs_star_test, u);
        rawData = rawData(1:2, :);
        
    case 3
        %% circle, type 3
        numData = 20;
        r = 100;
        u = linspace(0, 2*pi, numData);
        rawData = r*[cos(u)-1; sin(u)];
        
    case 4
        %% Fan-shaped Toolpath Data Points
        % From Michele Mei-Ting Heng's master thesis.
        qx = [ -16.0688, -0.0562, 7.8712, 13.5113, 15.0488, 13.5863, 9.1125, 8.2125,...
            8.4150, 9.2025, 10.5413, 12.0825, 13.5825, 15.1650, 18.1950, 25.5900, 31.6463,...
            34.3387, 37.6013, 41.3325, 45.1275, 49.6200, 56.9850, 57.1575, 54.1838, 48.1388,...
            39.2062, 30.1613, 15.1537, 11.8650, 10.4175, 9.0300, 8.3963, 8.3438, 8.5313,...
            9.0975, 10.6463, 18.3188, 27.3038, 30.2400, 32.4675, 33.5887, 33.2400, 30.2137,...
            16.0688, 0.0562, -7.8712, -13.5113, -15.0488, -13.5863, -9.1125, -8.2125, -8.4150,...
            -9.2025, -10.5413, -12.0825, -13.5825, -15.1650, -18.1950, -25.5900, -31.6463,...
            -34.3387, -37.6013, -41.3325, -45.1275, -49.6200, -56.9850, -57.1575, -54.1838,...
            -48.1388, -39.2062, -30.1613, -15.1537, -11.8650, -10.4175, -9.0300, -8.3963, -8.3438,...
            -8.5313, -9.0975, -10.6463, -18.3188, -27.3038, -30.2400, -32.4675, -33.5887, -33.2400,...
            -30.2137, -16.0688];
        qy = [ -56.9850, -57.1575, -54.1838, -48.1388, -39.2062, -30.1613, -15.1537,...
            - 11.8650, -10.4175, -9.0300, -8.3963, -8.3438, -8.5313, -9.0975, -10.6463, -18.3188,...
            -27.3038, -30.2400, -32.4675, -33.5887, -33.2400, -30.2137, -16.0688, -0.0562, 7.8712,...
            13.5113, 15.0488, 13.5863, 9.1125, 8.2125, 8.4150, 9.2025, 10.5413, 12.0825,...
            13.5825, 15.1650, 18.1950, 25.5900, 31.6463, 34.3387, 37.6013, 41.3325, 45.1275,...
            49.6200, 56.9850, 57.1575, 54.1838, 48.1388, 39.2062, 30.1613, 15.1537, 11.8650,...
            10.4175, 9.0300, 8.3963, 8.3438, 8.5313, 9.0975, 10.6463, 18.3188, 27.3038,...
            30.2400, 32.4675, 33.5887, 32.4000, 30.2137, 16.0688, 0.0562, -7.8712, -13.5113,...
            -15.0488, -13.5863, -9.1125, -8.2125, -8.4150, -9.2025, -10.5413, -12.0825, -13.5825,...
            -15.1650, -18.1950, -25.5900, -31.6463, -34.3387, -37.6013, -41.3325, -45.1275,...
            -49.6200, -56.9850];
        rawData = [qx; qy];
    case 5
        % four points example
        lenLine = 1;
        beta = 7.5 * pi / 180;
        rawData = [-2*lenLine*cos(2*beta), 0, lenLine, lenLine+0.5*lenLine*cos(2*beta); ...
            2*lenLine*sin(2*beta), 0, 0, 0; 0, 0, 0, 0.5*lenLine*sin(2*beta)];
end


end